# [include fluidd.cfg]
# [mcu]
# serial: /dev/serial/by-id/<your-mcu-id>

# [virtual_sdcard]
# path: /home/pi/printer_data/gcodes
# on_error_gcode: CANCEL_PRINT

# [printer]
# kinematics: none
# max_velocity: 1000
# max_accel: 1000

# SSA VORON 2.4 rev C

# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				    [gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps					[extruder] section

[include fluidd.cfg]

[include K-ShakeTune/*.cfg]

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_20001D000750534E4E313120-if00
#restart_method: command
##--------------------------------------------------------------------

# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 7b4c700d6e67

#####################################################################
# 	Extruder
#####################################################################


[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 5.565
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.06
max_extrude_only_distance: 100
heater_pin: EBBCan: PB13
# sensor_type: EPCOS 100K B57560G104F
sensor_type: PT1000
sensor_pin: EBBCan: PA3
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control: pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp: 10
max_temp: 270

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999


#[neopixel hotend_rgb]
#pin: EBBCan:PD3

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 4000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop # endstop_pin: PG6
position_min: 0
position_endstop: 350
position_max: 350
homing_speed:40    #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.8
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6
driver_SGTHRS: 75

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop #endstop_pin: !PG9
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 40  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 0.8
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9
driver_SGTHRS: 83 # 255 is most sensitive value, 0 is least sensitive
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
# endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
homing_retract_dist: 0 # beacon needs this to be set to 0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 340
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

######################################################################
#     input shaper from BTT EBB36
######################################################################

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345

[input_shaper]
#shaper_freq_x: 88.2  # frequency for the X mark of the test model
#shaper_freq_y: 41.9  # frequency for the Y mark of the test model
shaper_type: mzv

#####################################################################
# 	Bed Heater
#####################################################################
[thermistor my_thermistor]
temperature1: 25
resistance1: 100000
beta: 3950

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: my_thermistor
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_C621866D515137474C202020FF0C2A2B-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 20 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2

#####################################################################
# 	Fan Control
#####################################################################

#CPAP FAN
[fan]
pin: PG15
max_power: .5 
off_below: 0.1
cycle_time: .0005

#HOTEND FAN
[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
max_power: 1.0
kick_start_time: 0.5
heater_temp: 50
fan_speed: 1

# Control enclosure FAN 1
[heater_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 15
fan_speed: 0.3

# Control enclosure FAN 2
[heater_fan exhaust_fan]
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 0.5

#####################################################################
# 	Bed Mesh
#####################################################################

[bed_mesh]
speed: 500
horizontal_move_z: 10
##--------------------------------------------------------------------
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
# relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)
zero_reference_position=175,175

###########################################################
#    Add raspberry PI system temperature 
###########################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

############################################################
#    Add Octopus MCU system temperature 
############################################################
[temperature_sensor octopus_mcu]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

############################################################
#   Add Enclosure temperature 
############################################################
[temperature_sensor Enclosure]
sensor_type:EPCOS 100K B57560G104F 
sensor_pin: PF5 
min_temp: 10
max_temp: 100

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:175.000,175.000
speed:100
z_hop:3

[quad_gantry_level]

gantry_corners:
	-60,-10
	410,420
##	Probe points
points:
	50,25
	50,275
	300,275
	300,25
speed: 700
horizontal_move_z: 15
retries: 3
retry_tolerance: 0.0075
max_adjust: 10

#######################################################################
# SKEW corection 
#######################################################################
[skew_correction]

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

# [display]
##	mini12864 LCD Display
# lcd_type: uc1701
# cs_pin: EXP1_3
# a0_pin: EXP1_4
# rst_pin: EXP1_5
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2
# contrast: 63
# spi_software_miso_pin: EXP2_1
# spi_software_mosi_pin: EXP2_6
# spi_software_sclk_pin: EXP2_2

# [neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
# pin: EXP1_6
# chain_count: 3
# initial_RED: 0.8
# initial_GREEN: 0.1
# initial_BLUE: 0.1
# color_order: RGB
##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob

#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
#--------------------------------------------------------------------

#####################################################################
#
#           Macros
#
#####################################################################

[gcode_macro HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro M0] 
gcode: pause

[gcode_macro PURGE_LINE]
gcode:
    G0 X10 Y5 Z0.3 F9000
    G92 E0
    G1 E10 F600
    G1 X150 E20 F1000
    G92 E0
    # G91
    # G0 X50 F18000
    # G0 X-40 F18000
    G0 Z10 F1000
    G90

[gcode_macro GANTRY_LEVEL]
gcode:
    # BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z30 F3600
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  
   {% set BED = params.BED|default(60)|float %}
   {% set EXTRUDER = params.EXTRUDER|default(190)|float %}

    SAVE_GCODE_STATE NAME=start
    M117 Warmup
    M190 S{BED}
    M109 S{EXTRUDER}
    # G32                            ; home all axes
    GANTRY_LEVEL
    # BED_MESH
    PURGE_LINE
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z100 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X175 Y175 F3600            ; park nozzle at rear
#    BED_MESH_CLEAR
    
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

# [gcode_macro T0]
# gcode:
    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.246
#*# pid_ki = 1.595
#*# pid_kd = 241.365
#*#
#*# [extruder]
#*#
#*# [stepper_z]
#*# position_endstop = 1.220
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.041450, 0.028406, 0.041926, 0.031696, -0.057830
#*# 	-0.068154, 0.016993, 0.027224, -0.000274, -0.094681
#*# 	-0.088762, -0.008664, 0.000000, -0.032026, -0.131164
#*# 	-0.066129, 0.002208, 0.020559, -0.008353, -0.095495
#*# 	-0.037187, 0.019947, 0.033019, 0.012694, -0.060229
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [beacon model default]
#*# model_coef = 1.4257757932036912,
#*# 	1.7438424030619541,
#*# 	0.7729726510847836,
#*# 	0.34832715187676755,
#*# 	0.2869578622193675,
#*# 	0.3962405030245676,
#*# 	-0.0494072632810181,
#*# 	-0.30396701025087064,
#*# 	0.16279870591465745,
#*# 	0.21711007544320737
#*# model_domain = 3.1334339658775797e-07,3.3231522289284566e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 23.363884
#*# model_offset = 0.01500
#*#
#*# [bed_mesh new setup]
#*# version = 1
#*# points =
#*# 	-0.036507, 0.040026, 0.051224, 0.035035, -0.041705
#*# 	-0.068986, 0.021122, 0.030798, 0.002043, -0.089476
#*# 	-0.095842, -0.010151, 0.000000, -0.029060, -0.125243
#*# 	-0.056775, 0.004844, 0.024729, -0.002462, -0.085085
#*# 	-0.033507, 0.020835, 0.040567, 0.029520, -0.039642
#*# tension = 0.2
#*# mesh_x_pps = 2
#*# algo = bicubic
#*# min_x = 40.0
#*# min_y = 40.0
#*# y_count = 5
#*# mesh_y_pps = 2
#*# x_count = 5
#*# max_x = 310.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 93.6
#*# shaper_type_y = zv
#*# shaper_freq_y = 43.4
